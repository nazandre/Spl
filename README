Spl
===

Translator from Shakespeare Programming Language (SPL) to C written in Python, developed by Sam Donow (c) 2014-2015 (sad3@williams.edu, drsam94@gmail.com).

SPL was invented by Kalle Hasselstrom and Jon Aslund. Sam Donow's translator software is free to edit, use, or sell. The translator implements most features of SPL described at http://shakespearelang.sourceforge.net/report/shakespeare/ and in shakespeare.pdf.

This repository contains some examples coded in SPL in the folder examples. I personally developed some of them only (fact.spl for instance).

-----------
The following features not in the original language spec are implemented:

PRETTY GOTOS:
In the original language spec, goto statements take the form "let us proceed to scene III", "let us return to act I",
etc. As this is both awkward and non-Shakesperian, Sam Donow has made it so that you can use the name of an act or scene (not case,
punctuation, or whitespace sensitive) in place of a this awkward structure. Therefore, if you had
Act I: The Forest.

Then the sentence "let us return to the forest" is equivalent to "let us return to act I".

Like standard gotos, you can not jump to a scene within an act other than the one you are currently in.

INITIAL DECLARATIONS:
In the original language, everything after the comma in a declaration, such as:

Romeo, an evil octopus.

is ignored: so in the above, though octopus is not a Shakespearean noun, this is allowed. However, the spec does not make it clear what the initial value of a variable should be, which would lead to undefined behavior. In SPL, you can put a noun phrase after Romeo, and it will be evaluated to a number, so for example

Romeo, a good man.

will assign 2 to Romeo. Any non-legal noun phrase will assign 0 instead (as though it had been ignored).

----------

To use spl, simply run

$ ./spl [Input File]
$ ./a.out

Or, if you would like, you can run

$ python2 splc.py [Input File] > [Output File]
$ gcc [Output File] -lm
$ ./a.out

The spl script should work in any bash terminal, on Windows, the explicit python method should work if you have all of the right programs installed.

Depenencies:
Python (2.X or 3.X)
gcc
